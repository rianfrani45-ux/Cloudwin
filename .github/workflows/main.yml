name: Windows RDP via ZeroTier

on:
  workflow_dispatch:
    inputs:
      zerotier_network:
        description: "ID da rede ZeroTier (ex: d5e5fb6537bfb29a)"
        required: true
      zerotier_token:
        description: "API Token do ZeroTier (opcional, para autorizar automático)"
        required: false

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Instalar ZeroTier
        run: |
          $url = "https://download.zerotier.com/dist/ZeroTierOne.msi"
          $dst = "$env:TEMP\ZeroTierOne.msi"
          Invoke-WebRequest -Uri $url -OutFile $dst
          Start-Process msiexec.exe -ArgumentList "/i `"$dst`" /quiet /norestart" -Wait

      - name: Encontrar zerotier-cli.exe (otimizado)
        id: findcli
        shell: pwsh
        run: |
          $cli1 = "C:\ProgramData\ZeroTier\One\zerotier-cli.exe"
          $cli2 = "C:\Program Files (x86)\ZeroTier\One\zerotier-cli.exe"

          if (Test-Path $cli1) {
              $cli = $cli1
          } elseif (Test-Path $cli2) {
              $cli = $cli2
          } else {
              throw "zerotier-cli.exe não encontrado"
          }

          Write-Host "CLI encontrado em: $cli"
          echo "::set-output name=cli::$cli"

      - name: Entrar na rede ZeroTier
        run: |
          $cli = "${{ steps.findcli.outputs.cli }}"
          & $cli join ${{ github.event.inputs.zerotier_network }}
          Start-Sleep -Seconds 10
          & $cli listnetworks

      - name: Autorizar nó automaticamente (opcional)
        if: ${{ github.event.inputs.zerotier_token != '' }}
        run: |
          $cli = "${{ steps.findcli.outputs.cli }}"
          $nodeId = (& $cli info).Split(" ")[2]
          $authUrl = "https://api.zerotier.com/api/v1/network/${{ github.event.inputs.zerotier_network }}/member/$nodeId"
          $headers = @{ "Authorization" = "Bearer ${{ github.event.inputs.zerotier_token }}" }
          $body = '{ "authorized": true }'
          Invoke-RestMethod -Uri $authUrl -Headers $headers -Method POST -Body $body -ContentType "application/json"

      - name: Habilitar RDP
        run: |
          Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Write-Host "RDP habilitado com sucesso!"
